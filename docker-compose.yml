version: '3.8'

services:
  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@db:5432/noteapp
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEXT_PUBLIC_BASE_URL=http://localhost:3000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./.env.local:/app/.env.local:ro

  # PostgreSQL Database (for local development)
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: noteapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Prisma Studio (optional - for database management)
  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile.prisma
    ports:
      - "5555:5555"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/noteapp
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    profiles:
      - tools

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge